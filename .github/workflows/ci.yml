name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.19'
          otp-version: '27'

      - name: Check formatting
        run: mix format --check-formatted

  compile:
    name: Compile
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.19'
          otp-version: '27'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            ~/.mix
            ~/.cache/rebar3
            ~/.hex
          key: deps-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile with warnings as errors
        run: mix compile --warnings-as-errors

  lint:
    name: Lint (Credo)
    runs-on: ubuntu-latest
    needs: compile
    env:
      MIX_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.19'
          otp-version: '27'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            ~/.mix
            ~/.cache/rebar3
            ~/.hex
          key: deps-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Run Credo
        run: mix credo --strict

  dialyzer:
    name: Static Analysis (Dialyzer)
    runs-on: ubuntu-latest
    needs: compile
    env:
      MIX_ENV: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.19'
          otp-version: '27'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            ~/.mix
            ~/.cache/rebar3
            ~/.hex
          key: deps-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Restore PLT cache
        uses: actions/cache@v4
        with:
          path: |
            _build/${{ env.MIX_ENV }}/dialyxir_*.plt
            _build/${{ env.MIX_ENV }}/dialyxir_*.plt.hash
          key: plt-${{ runner.os }}-${{ env.MIX_ENV }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            plt-${{ runner.os }}-${{ env.MIX_ENV }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Run Dialyzer
        run: mix dialyzer

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: compile
    env:
      MIX_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.19'
          otp-version: '27'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            ~/.mix
            ~/.cache/rebar3
            ~/.hex
          key: deps-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Run tests with coverage
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
